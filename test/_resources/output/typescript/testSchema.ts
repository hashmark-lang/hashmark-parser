/*! This file was generated by Hashml https://github.com/hashml/hashml */
import { HMError, parse, SchemaDefinition } from "../../../../src";
export type Tag = (Block | Inline);
export type Block = (RawHeadBlock | RawBodyBlock | _defaultBlock | _Block);
export type Inline = (CodeInline | StrongInline | EmphasisInline | TripletInline | RawFirstArgInline | Tag_Inline | InlineInline | LinkInline);

export interface Root {
    $tag: "root";
    children: _Block[];
}

export interface RawHeadBlock {
    $tag: "rawHead";
    children: _Block[];
    head: string;
}

export interface RawBodyBlock {
    $tag: "rawBody";
    content: string[];
}

export interface _defaultBlock {
    $tag: "_default";
    children: _Block[];
    head: (TripletInline | StrongInline | EmphasisInline | InlineInline | CodeInline | RawFirstArgInline | Tag_Inline | LinkInline | string)[];
}

export interface _Block {
    $tag: "*";
    children: _Block[];
    head: (TripletInline | StrongInline | EmphasisInline | InlineInline | CodeInline | RawFirstArgInline | Tag_Inline | LinkInline | string)[];
}

export interface CodeInline {
    $tag: "code";
    content: string;
}

export interface StrongInline {
    $tag: "strong";
    content: (TripletInline | StrongInline | EmphasisInline | InlineInline | CodeInline | RawFirstArgInline | Tag_Inline | LinkInline | string)[];
}

export interface EmphasisInline {
    $tag: "emphasis";
    content: (TripletInline | StrongInline | EmphasisInline | InlineInline | CodeInline | RawFirstArgInline | Tag_Inline | LinkInline | string)[];
}

export interface TripletInline {
    $tag: "triplet";
    first: (TripletInline | StrongInline | EmphasisInline | InlineInline | CodeInline | RawFirstArgInline | Tag_Inline | LinkInline | string)[];
    second: (TripletInline | StrongInline | EmphasisInline | InlineInline | CodeInline | RawFirstArgInline | Tag_Inline | LinkInline | string)[];
    third: (TripletInline | StrongInline | EmphasisInline | InlineInline | CodeInline | RawFirstArgInline | Tag_Inline | LinkInline | string)[];
}

export interface RawFirstArgInline {
    $tag: "rawFirstArg";
    first: string;
    second: (TripletInline | StrongInline | EmphasisInline | InlineInline | CodeInline | RawFirstArgInline | Tag_Inline | LinkInline | string)[];
}

export interface Tag_Inline {
    $tag: "tag\\";
    arg: (TripletInline | StrongInline | EmphasisInline | InlineInline | CodeInline | RawFirstArgInline | Tag_Inline | LinkInline | string)[];
}

export interface InlineInline {
    $tag: "inline";
    arg: (TripletInline | StrongInline | EmphasisInline | InlineInline | CodeInline | RawFirstArgInline | Tag_Inline | LinkInline | string)[];
}

export interface LinkInline {
    $tag: "link";
    url: URL;
    title: (TripletInline | StrongInline | EmphasisInline | InlineInline | CodeInline | RawFirstArgInline | Tag_Inline | LinkInline | string)[];
}
const schema: SchemaDefinition = {
    "root": {
        "rawBody": false,
        "props": {
            "body": {
                "children": {
                    "*": {
                        "min": 0,
                        "max": Infinity
                    }
                }
            }
        },
        "defaultTag": "_default"
    },
    "blocks": {
        "rawHead": {
            "rawBody": false,
            "props": {
                "head": {
                    "raw": true,
                    "type": "string",
                    "name": "head"
                },
                "body": {
                    "children": {
                        "*": {
                            "min": 0,
                            "max": Infinity
                        }
                    }
                }
            }
        },
        "rawBody": {
            "rawBody": true,
            "props": {
                "body": "content"
            }
        },
        "_default": {
            "rawBody": false,
            "props": {
                "head": {
                    "raw": false,
                    "name": "head",
                    "content": [
                        "triplet",
                        "strong",
                        "emphasis",
                        "inline",
                        "code",
                        "rawFirstArg",
                        "tag\\",
                        "inline",
                        "link"
                    ]
                },
                "body": {
                    "children": {
                        "*": {
                            "min": 0,
                            "max": Infinity
                        }
                    }
                }
            },
            "defaultTag": "_default"
        },
        "*": {
            "rawBody": false,
            "props": {
                "head": {
                    "raw": false,
                    "name": "head",
                    "content": [
                        "triplet",
                        "strong",
                        "emphasis",
                        "inline",
                        "code",
                        "rawFirstArg",
                        "tag\\",
                        "inline",
                        "link"
                    ]
                },
                "body": {
                    "children": {
                        "*": {
                            "min": 0,
                            "max": Infinity
                        }
                    }
                }
            },
            "defaultTag": "_default"
        }
    },
    "inline": {
        "code": {
            "sugar": {
                "start": "`",
                "end": "`"
            },
            "args": [
                {
                    "raw": true,
                    "type": "string",
                    "name": "content"
                }
            ]
        },
        "strong": {
            "sugar": {
                "start": "*",
                "end": "*"
            },
            "args": [
                {
                    "raw": false,
                    "name": "content",
                    "content": [
                        "triplet",
                        "strong",
                        "emphasis",
                        "inline",
                        "code",
                        "rawFirstArg",
                        "tag\\",
                        "inline",
                        "link"
                    ]
                }
            ]
        },
        "emphasis": {
            "sugar": {
                "start": "_",
                "end": "_"
            },
            "args": [
                {
                    "raw": false,
                    "name": "content",
                    "content": [
                        "triplet",
                        "strong",
                        "emphasis",
                        "inline",
                        "code",
                        "rawFirstArg",
                        "tag\\",
                        "inline",
                        "link"
                    ]
                }
            ]
        },
        "triplet": {
            "sugar": {
                "start": "{",
                "separator": "|",
                "end": "}"
            },
            "args": [
                {
                    "raw": false,
                    "name": "first",
                    "content": [
                        "triplet",
                        "strong",
                        "emphasis",
                        "inline",
                        "code",
                        "rawFirstArg",
                        "tag\\",
                        "inline",
                        "link"
                    ]
                },
                {
                    "raw": false,
                    "name": "second",
                    "content": [
                        "triplet",
                        "strong",
                        "emphasis",
                        "inline",
                        "code",
                        "rawFirstArg",
                        "tag\\",
                        "inline",
                        "link"
                    ]
                },
                {
                    "raw": false,
                    "name": "third",
                    "content": [
                        "triplet",
                        "strong",
                        "emphasis",
                        "inline",
                        "code",
                        "rawFirstArg",
                        "tag\\",
                        "inline",
                        "link"
                    ]
                }
            ]
        },
        "rawFirstArg": {
            "sugar": {
                "start": "{",
                "separator": "|",
                "end": "}"
            },
            "args": [
                {
                    "raw": true,
                    "type": "string",
                    "name": "first"
                },
                {
                    "raw": false,
                    "name": "second",
                    "content": [
                        "triplet",
                        "strong",
                        "emphasis",
                        "inline",
                        "code",
                        "rawFirstArg",
                        "tag\\",
                        "inline",
                        "link"
                    ]
                }
            ]
        },
        "tag\\": {
            "args": [
                {
                    "raw": false,
                    "name": "arg",
                    "content": [
                        "triplet",
                        "strong",
                        "emphasis",
                        "inline",
                        "code",
                        "rawFirstArg",
                        "tag\\",
                        "inline",
                        "link"
                    ]
                }
            ]
        },
        "inline": {
            "args": [
                {
                    "raw": false,
                    "name": "arg",
                    "content": [
                        "triplet",
                        "strong",
                        "emphasis",
                        "inline",
                        "code",
                        "rawFirstArg",
                        "tag\\",
                        "inline",
                        "link"
                    ]
                }
            ]
        },
        "link": {
            "args": [
                {
                    "raw": true,
                    "type": "url",
                    "name": "url"
                },
                {
                    "raw": false,
                    "name": "title",
                    "content": [
                        "triplet",
                        "strong",
                        "emphasis",
                        "inline",
                        "code",
                        "rawFirstArg",
                        "tag\\",
                        "inline",
                        "link"
                    ]
                }
            ]
        }
    }
};

export function parseTyped(file: string): Root | HMError[] {
    const errors: HMError[] = [];
    const logger = (err: HMError) => errors.push(err);
    const result = parse(file, schema, logger);
    if (errors.length === 0) {
        return (result as unknown) as Root;
    } else {
        return errors;
    }
}
